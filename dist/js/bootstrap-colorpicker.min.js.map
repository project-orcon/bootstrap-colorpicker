{"version":3,"sources":["webpack://bootstrap-colorpicker/webpack/universalModuleDefinition","webpack://bootstrap-colorpicker/webpack/bootstrap","webpack://bootstrap-colorpicker/external {\"root\":\"jQuery\",\"commonjs2\":\"jquery\",\"commonjs\":\"jquery\",\"amd\":\"jquery\"}","webpack://bootstrap-colorpicker/./src/js/Extension.js","webpack://bootstrap-colorpicker/./src/js/ColorItem.js","webpack://bootstrap-colorpicker/./src/js/options.js","webpack://bootstrap-colorpicker/./src/js/extensions/Palette.js","webpack://bootstrap-colorpicker/./node_modules/color-name/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/conversions.js","webpack://bootstrap-colorpicker/./src/js/plugin.js","webpack://bootstrap-colorpicker/./src/js/Colorpicker.js","webpack://bootstrap-colorpicker/./src/js/extensions/index.js","webpack://bootstrap-colorpicker/./src/js/extensions/Debugger.js","webpack://bootstrap-colorpicker/./src/js/extensions/Preview.js","webpack://bootstrap-colorpicker/./src/js/extensions/Swatches.js","webpack://bootstrap-colorpicker/./src/js/SliderHandler.js","webpack://bootstrap-colorpicker/./src/js/PopupHandler.js","webpack://bootstrap-colorpicker/./src/js/InputHandler.js","webpack://bootstrap-colorpicker/./node_modules/color/index.js","webpack://bootstrap-colorpicker/./node_modules/color-string/index.js","webpack://bootstrap-colorpicker/./node_modules/simple-swizzle/index.js","webpack://bootstrap-colorpicker/./node_modules/is-arrayish/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/index.js","webpack://bootstrap-colorpicker/./node_modules/color-convert/route.js","webpack://bootstrap-colorpicker/./src/js/ColorHandler.js","webpack://bootstrap-colorpicker/./src/js/PickerHandler.js","webpack://bootstrap-colorpicker/./src/js/AddonHandler.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_jquery","Extension","colorpicker","options","arguments","length","undefined","_classCallCheck","this","element","Error","on","$","proxy","onCreate","onDestroy","onUpdate","onChange","onInvalid","onShow","onHide","onEnable","onDisable","color","realColor","event","off","_color","HSVAColor","h","v","a","isNaN","ColorItem","fn","_len","args","Array","_key","result","apply","QixColor","format","_original","replace","sanitizeFormat","valid","parse","_color2","default","_format","isHex","model","hue","saturation","alpha","hasAlpha","toObject","string","round","str","isValid","isDark","isLight","formula","hues","isArray","colorFormulas","colors","mainColor","forEach","levels","saturationv","push","Math","sanitizeString","e","String","match","toLowerCase","complementary","triad","tetrad","splitcomplement","sassVars","bar_size_short","base_margin","columns","sliderSize","customClass","fallbackColor","horizontal","inline","container","popover","animation","placement","fallbackPlacement","debug","input","addon","autoInputFallback","useHashPrefix","useAlpha","template","extensions","showText","sliders","selector","maxLeft","maxTop","callLeft","callTop","childSelector","slidersHorz","_Extension2","defaults","namesAsValues","Palette","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","extend","_typeof","keys","getLength","indexOf","toUpperCase","getValue","getName","defaultValue","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","cssKeywords","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","g","b","min","max","delta","rdif","gdif","bdif","diff","diffc","w","y","k","comparativeDistance","x","pow","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","t1","t2","t3","val","smin","lmin","sv","hi","floor","f","q","vmin","sl","wh","bl","ratio","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","ansi","mult","rem","integer","toString","substring","colorString","split","map","char","join","parseInt","chroma","grayscale","pure","mg","_Colorpicker","plugin","Colorpicker","option","fnArgs","slice","isSingleElement","returnValue","$elements","each","$this","_jquery2","inst","data","isFunction","constructor","_Extension","_options","_extensions","_SliderHandler","_PopupHandler","_InputHandler","_ColorHandler","_PickerHandler","_AddonHandler","_ColorItem","colorPickerIdCounter","self","colorHandler","pickerHandler","picker","id","lastEvent","alias","addClass","attr","disabled","inputHandler","InputHandler","ColorHandler","sliderHandler","SliderHandler","popupHandler","PopupHandler","PickerHandler","addonHandler","AddonHandler","init","trigger","initExtensions","attach","update","isDisabled","disable","ext","registerExtension","ExtensionClass","config","unbind","removeClass","removeData","show","hide","toggle","ch","hasColor","equals","createColor","updateFromPicker","assureColor","enable","eventName","type","coreExtensions","_Debugger","_Preview","_Swatches","_Palette","Debugger","Preview","Swatches","debugger","preview","swatches","palette","eventCounter","hasInput","onChangeInput","_console","logMessage","console","concat","logArgs","log","_get","elementInner","find","append","css","html","toRgbString","_Palette2","barTemplate","swatchTemplate","isEnabled","load","_this2","swatchContainer","isAliased","empty","$swatch","$sw","setValue","currentSlider","mousePointer","left","top","onMove","defaultOnMove","slider","cp","getFallbackColor","getClone","guideStyle","focus","sliderClasses","sliderName","pressed","mousemove.colorpicker","moved","touchmove.colorpicker","mouseup.colorpicker","released","touchend.colorpicker","pageX","pageY","originalEvent","touches","target","zone","closest","is","parent","guide","offset","style","preventDefault","popoverTarget","popoverTip","clicking","hidding","showing","hasAddon","createPopover","mousedown.colorpicker touchstart.colorpicker","focus.colorpicker","focusout.colorpicker","reposition","document","onClickingInside","isOrIsInside","currentTarget","isClickingInside","_defaults","content","tip","fireShow","fireHide","isVisible","stopPropagation","isPopover","isHidden","hasClass","_initValue","keyup.colorpicker","onkeyup","change.colorpicker","onchange","item","getFormattedColor","prop","inputVal","getColorString","resolveColorDelegate","isInvalidColor","_slice","skippedModels","hashedModelKeys","sort","limiters","Color","obj","valpha","newArr","zeroArray","splice","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","to","percentString","percent","array","unitArray","unitObject","roundToPlace","getset","maxfn","saturationl","lightness","wblack","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","yiq","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","newAlpha","assertArray","raw","roundTo","num","Number","toFixed","channel","modifier","arr","colorNames","swizzle","reverseNames","cs","prefix","abbr","rgba","per","hexAlpha","i2","parseFloat","clamp","hexDouble","hsla","hwba","isArrayish","results","len","arg","wrap","Function","conversions","route","models","wrapRaw","wrappedFn","conversion","wrapRounded","fromModel","routes","routeModels","toModel","buildGraph","graph","deriveBFS","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","path","cur","fallbackOnInvalid","isAlphaEnabled","fallback","warn","extResolvedColor","resolveColor","hasTransparency","_supportsAlphaBar","pickerParent","appendTo","remove","vertical","saturationGuide","hueGuide","alphaGuide","hsva","toHsvaRatio","getCloneHueOnly","toHexString","hexColor","alphaBg","colorStr","styles","background","icn","eq"],"mappings":"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","file":"bootstrap-colorpicker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrap-colorpicker\", [\"jquery\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrap-colorpicker\"] = factory(require(\"jquery\"));\n\telse\n\t\troot[\"bootstrap-colorpicker\"] = factory(root[\"jQuery\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Colorpicker extension class.\r\n */\r\nclass Extension {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   * @param {Object} options\r\n   */\r\n  constructor(colorpicker, options = {}) {\r\n    /**\r\n     * The colorpicker instance\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * Extension options\r\n     *\r\n     * @type {Object}\r\n     */\r\n    this.options = options;\r\n\r\n    if (!(this.colorpicker.element && this.colorpicker.element.length)) {\r\n      throw new Error('Extension: this.colorpicker.element is not valid');\r\n    }\r\n\r\n    this.colorpicker.element.on('colorpickerCreate.colorpicker-ext', $.proxy(this.onCreate, this));\r\n    this.colorpicker.element.on('colorpickerDestroy.colorpicker-ext', $.proxy(this.onDestroy, this));\r\n    this.colorpicker.element.on('colorpickerUpdate.colorpicker-ext', $.proxy(this.onUpdate, this));\r\n    this.colorpicker.element.on('colorpickerChange.colorpicker-ext', $.proxy(this.onChange, this));\r\n    this.colorpicker.element.on('colorpickerInvalid.colorpicker-ext', $.proxy(this.onInvalid, this));\r\n    this.colorpicker.element.on('colorpickerShow.colorpicker-ext', $.proxy(this.onShow, this));\r\n    this.colorpicker.element.on('colorpickerHide.colorpicker-ext', $.proxy(this.onHide, this));\r\n    this.colorpicker.element.on('colorpickerEnable.colorpicker-ext', $.proxy(this.onEnable, this));\r\n    this.colorpicker.element.on('colorpickerDisable.colorpicker-ext', $.proxy(this.onDisable, this));\r\n  }\r\n\r\n  /**\r\n   * Function called every time a new color needs to be created.\r\n   * Return false to skip this resolver and continue with other extensions' ones\r\n   * or return anything else to consider the color resolved.\r\n   *\r\n   * @param {ColorItem|String|*} color\r\n   * @param {boolean} realColor if true, the color should resolve into a real (not named) color code\r\n   * @return {ColorItem|String|*}\r\n   */\r\n  resolveColor(color, realColor = true) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is created\r\n   *\r\n   * @listens Colorpicker#colorpickerCreate\r\n   * @param {Event} event\r\n   */\r\n  onCreate(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is destroyed\r\n   *\r\n   * @listens Colorpicker#colorpickerDestroy\r\n   * @param {Event} event\r\n   */\r\n  onDestroy(event) {\r\n    this.colorpicker.element.off('.colorpicker-ext');\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is updated\r\n   *\r\n   * @listens Colorpicker#colorpickerUpdate\r\n   * @param {Event} event\r\n   */\r\n  onUpdate(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker color is changed\r\n   *\r\n   * @listens Colorpicker#colorpickerChange\r\n   * @param {Event} event\r\n   */\r\n  onChange(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called when the colorpicker color is invalid\r\n   *\r\n   * @listens Colorpicker#colorpickerInvalid\r\n   * @param {Event} event\r\n   */\r\n  onInvalid(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is hidden\r\n   *\r\n   * @listens Colorpicker#colorpickerHide\r\n   * @param {Event} event\r\n   */\r\n  onHide(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is shown\r\n   *\r\n   * @listens Colorpicker#colorpickerShow\r\n   * @param {Event} event\r\n   */\r\n  onShow(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is disabled\r\n   *\r\n   * @listens Colorpicker#colorpickerDisable\r\n   * @param {Event} event\r\n   */\r\n  onDisable(event) {\r\n    // to be extended\r\n  }\r\n\r\n  /**\r\n   * Method called after the colorpicker is enabled\r\n   *\r\n   * @listens Colorpicker#colorpickerEnable\r\n   * @param {Event} event\r\n   */\r\n  onEnable(event) {\r\n    // to be extended\r\n  }\r\n}\r\n\r\nexport default Extension;\r\n","/**\r\n * Color manipulation class, specific for Bootstrap Colorpicker\r\n */\r\nimport QixColor from 'color';\r\n\r\n/**\r\n * HSVA color data class, containing the hue, saturation, value and alpha\r\n * information.\r\n */\r\nclass HSVAColor {\r\n  /**\r\n   * @param {number|int} h\r\n   * @param {number|int} s\r\n   * @param {number|int} v\r\n   * @param {number|int} a\r\n   */\r\n  constructor(h, s, v, a) {\r\n    this.h = isNaN(h) ? 0 : h;\r\n    this.s = isNaN(s) ? 0 : s;\r\n    this.v = isNaN(v) ? 0 : v;\r\n    this.a = isNaN(h) ? 1 : a;\r\n  }\r\n\r\n  toString() {\r\n    return `${this.h}, ${this.s}%, ${this.v}%, ${this.a}`;\r\n  }\r\n}\r\n\r\n/**\r\n * HSVA color manipulation\r\n */\r\nclass ColorItem {\r\n  /**\r\n   * Returns the HSVAColor class\r\n   *\r\n   * @static\r\n   * @example let colorData = new ColorItem.HSVAColor(360, 100, 100, 1);\r\n   * @returns {HSVAColor}\r\n   */\r\n  static get HSVAColor() {\r\n    return HSVAColor;\r\n  }\r\n\r\n  /**\r\n   * Applies a method of the QixColor API and returns a new Color object or\r\n   * the return value of the method call.\r\n   *\r\n   * If no argument is provided, the internal QixColor object is returned.\r\n   *\r\n   * @param {String} fn QixColor function name\r\n   * @param args QixColor function arguments\r\n   * @example let darkerColor = color.api('darken', 0.25);\r\n   * @example let luminosity = color.api('luminosity');\r\n   * @example color = color.api('negate');\r\n   * @example let qColor = color.api().negate();\r\n   * @returns {ColorItem|QixColor|*}\r\n   */\r\n  api(fn, ...args) {\r\n    if (arguments.length === 0) {\r\n      return this._color;\r\n    }\r\n\r\n    let result = this._color[fn].apply(this._color, args);\r\n\r\n    if (!(result instanceof QixColor)) {\r\n      // return result of the method call\r\n      return result;\r\n    }\r\n\r\n    return new ColorItem(result, this.format);\r\n  }\r\n\r\n  /**\r\n   * Returns the original ColorItem constructor data,\r\n   * plus a 'valid' flag to know if it's valid or not.\r\n   *\r\n   * @returns {{color: *, format: String, valid: boolean}}\r\n   */\r\n  get original() {\r\n    return this._original;\r\n  }\r\n\r\n  /**\r\n   * @param {ColorItem|HSVAColor|QixColor|String|*|null} color Color data\r\n   * @param {String|null} format Color model to convert to by default. Supported: 'rgb', 'hsl', 'hex'.\r\n   */\r\n  constructor(color = null, format = null) {\r\n    this.replace(color, format);\r\n  }\r\n\r\n  /**\r\n   * Replaces the internal QixColor object with a new one.\r\n   * This also replaces the internal original color data.\r\n   *\r\n   * @param {ColorItem|HSVAColor|QixColor|String|*|null} color Color data to be parsed (if needed)\r\n   * @param {String|null} format Color model to convert to by default. Supported: 'rgb', 'hsl', 'hex'.\r\n   * @example color.replace('rgb(255,0,0)', 'hsl');\r\n   * @example color.replace(hsvaColorData);\r\n   */\r\n  replace(color, format = null) {\r\n    format = ColorItem.sanitizeFormat(format);\r\n\r\n    /**\r\n     * @type {{color: *, format: String}}\r\n     * @private\r\n     */\r\n    this._original = {\r\n      color: color,\r\n      format: format,\r\n      valid: true\r\n    };\r\n    /**\r\n     * @type {QixColor}\r\n     * @private\r\n     */\r\n    this._color = ColorItem.parse(color);\r\n\r\n    if (this._color === null) {\r\n      this._color = QixColor();\r\n      this._original.valid = false;\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * @type {*|string}\r\n     * @private\r\n     */\r\n    this._format = format ? format : ColorItem.isHex(color) ? 'hex' : this._color.model;\r\n  }\r\n\r\n  /**\r\n   * Parses the color returning a Qix Color object or null if cannot be\r\n   * parsed.\r\n   *\r\n   * @param {ColorItem|HSVAColor|QixColor|String|*|null} color Color data\r\n   * @example let qColor = ColorItem.parse('rgb(255,0,0)');\r\n   * @static\r\n   * @returns {QixColor|null}\r\n   */\r\n  static parse(color) {\r\n    if (color instanceof QixColor) {\r\n      return color;\r\n    }\r\n\r\n    if (color instanceof ColorItem) {\r\n      return color._color;\r\n    }\r\n\r\n    let format = null;\r\n\r\n    if (color instanceof HSVAColor) {\r\n      color = [ color.h, color.s, color.v, isNaN(color.a) ? 1 : color.a ];\r\n    } else {\r\n      color = ColorItem.sanitizeString(color);\r\n    }\r\n\r\n    if (color === null) {\r\n      return null;\r\n    }\r\n\r\n    if (Array.isArray(color)) {\r\n      format = 'hsv';\r\n    }\r\n\r\n    try {\r\n      return QixColor(color, format);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sanitizes a color string, adding missing hash to hexadecimal colors\r\n   * and converting 'transparent' to a color code.\r\n   *\r\n   * @param {String|*} str Color string\r\n   * @example let colorStr = ColorItem.sanitizeString('ffaa00');\r\n   * @static\r\n   * @returns {String|*}\r\n   */\r\n  static sanitizeString(str) {\r\n    if (!(typeof str === 'string' || str instanceof String)) {\r\n      return str;\r\n    }\r\n\r\n    if (str.match(/^[0-9a-f]{2,}$/i)) {\r\n      return `#${str}`;\r\n    }\r\n\r\n    if (str.toLowerCase() === 'transparent') {\r\n      return '#FFFFFF00';\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Detects if a value is a string and a color in hexadecimal format (in any variant).\r\n   *\r\n   * @param {String} str\r\n   * @example ColorItem.isHex('rgba(0,0,0)'); // false\r\n   * @example ColorItem.isHex('ffaa00'); // true\r\n   * @example ColorItem.isHex('#ffaa00'); // true\r\n   * @static\r\n   * @returns {boolean}\r\n   */\r\n  static isHex(str) {\r\n    if (!(typeof str === 'string' || str instanceof String)) {\r\n      return false;\r\n    }\r\n\r\n    return !!str.match(/^#?[0-9a-f]{2,}$/i);\r\n  }\r\n\r\n  /**\r\n   * Sanitizes a color format to one supported by web browsers.\r\n   * Returns an empty string of the format can't be recognised.\r\n   *\r\n   * @param {String|*} format\r\n   * @example ColorItem.sanitizeFormat('rgba'); // 'rgb'\r\n   * @example ColorItem.isHex('hex8'); // 'hex'\r\n   * @example ColorItem.isHex('invalid'); // ''\r\n   * @static\r\n   * @returns {String} 'rgb', 'hsl', 'hex' or ''.\r\n   */\r\n  static sanitizeFormat(format) {\r\n    switch (format) {\r\n      case 'hex':\r\n      case 'hex3':\r\n      case 'hex4':\r\n      case 'hex6':\r\n      case 'hex8':\r\n        return 'hex';\r\n      case 'rgb':\r\n      case 'rgba':\r\n      case 'keyword':\r\n      case 'name':\r\n        return 'rgb';\r\n      case 'hsl':\r\n      case 'hsla':\r\n      case 'hsv':\r\n      case 'hsva':\r\n      case 'hwb': // HWB this is supported by Qix Color, but not by browsers\r\n      case 'hwba':\r\n        return 'hsl';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the color is valid, false if not.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isValid() {\r\n    return this._original.valid === true;\r\n  }\r\n\r\n  /**\r\n   * Hue value from 0 to 360\r\n   *\r\n   * @returns {int}\r\n   */\r\n  get hue() {\r\n    return this._color.hue();\r\n  }\r\n\r\n  /**\r\n   * Saturation value from 0 to 100\r\n   *\r\n   * @returns {int}\r\n   */\r\n  get saturation() {\r\n    return this._color.saturationv();\r\n  }\r\n\r\n  /**\r\n   * Value channel value from 0 to 100\r\n   *\r\n   * @returns {int}\r\n   */\r\n  get value() {\r\n    return this._color.value();\r\n  }\r\n\r\n  /**\r\n   * Alpha value from 0.0 to 1.0\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get alpha() {\r\n    let a = this._color.alpha();\r\n\r\n    return isNaN(a) ? 1 : a;\r\n  }\r\n\r\n  /**\r\n   * Default color format to convert to when calling toString() or string()\r\n   *\r\n   * @returns {String} 'rgb', 'hsl', 'hex' or ''\r\n   */\r\n  get format() {\r\n    return this._format ? this._format : this._color.model;\r\n  }\r\n\r\n  /**\r\n   * Sets the hue value\r\n   *\r\n   * @param {int} value Integer from 0 to 360\r\n   */\r\n  set hue(value) {\r\n    this._color = this._color.hue(value);\r\n  }\r\n\r\n  /**\r\n   * Sets the hue ratio, where 1.0 is 0, 0.5 is 180 and 0.0 is 360.\r\n   *\r\n   * @ignore\r\n   * @param {number} h Ratio from 1.0 to 0.0\r\n   */\r\n  setHueRatio(h) {\r\n    this.hue = (1 - h) * 360;\r\n  }\r\n\r\n  /**\r\n   * Sets the saturation value\r\n   *\r\n   * @param {int} value Integer from 0 to 100\r\n   */\r\n  set saturation(value) {\r\n    this._color = this._color.saturationv(value);\r\n  }\r\n\r\n  /**\r\n   * Sets the saturation ratio, where 1.0 is 100 and 0.0 is 0.\r\n   *\r\n   * @ignore\r\n   * @param {number} s Ratio from 0.0 to 1.0\r\n   */\r\n  setSaturationRatio(s) {\r\n    this.saturation = s * 100;\r\n  }\r\n\r\n  /**\r\n   * Sets the 'value' channel value\r\n   *\r\n   * @param {int} value Integer from 0 to 100\r\n   */\r\n  set value(value) {\r\n    this._color = this._color.value(value);\r\n  }\r\n\r\n  /**\r\n   * Sets the value ratio, where 1.0 is 0 and 0.0 is 100.\r\n   *\r\n   * @ignore\r\n   * @param {number} v Ratio from 1.0 to 0.0\r\n   */\r\n  setValueRatio(v) {\r\n    this.value = (1 - v) * 100;\r\n  }\r\n\r\n  /**\r\n   * Sets the alpha value. It will be rounded to 2 decimals.\r\n   *\r\n   * @param {int} value Float from 0.0 to 1.0\r\n   */\r\n  set alpha(value) {\r\n    // 2 decimals max\r\n    this._color = this._color.alpha(Math.round(value * 100) / 100);\r\n  }\r\n\r\n  /**\r\n   * Sets the alpha ratio, where 1.0 is 0.0 and 0.0 is 1.0.\r\n   *\r\n   * @ignore\r\n   * @param {number} a Ratio from 1.0 to 0.0\r\n   */\r\n  setAlphaRatio(a) {\r\n    this.alpha = 1 - a;\r\n  }\r\n\r\n  /**\r\n   * Sets the default color format\r\n   *\r\n   * @param {String} value Supported: 'rgb', 'hsl', 'hex'\r\n   */\r\n  set format(value) {\r\n    this._format = ColorItem.sanitizeFormat(value);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the saturation value is zero, false otherwise\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isDesaturated() {\r\n    return this.saturation === 0;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the alpha value is zero, false otherwise\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isTransparent() {\r\n    return this.alpha === 0;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the alpha value is numeric and less than 1, false otherwise\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  hasTransparency() {\r\n    return this.hasAlpha() && this.alpha < 1;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the alpha value is numeric, false otherwise\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  hasAlpha() {\r\n    return !isNaN(this.alpha);\r\n  }\r\n\r\n  /**\r\n   * Returns a new HSVAColor object, based on the current color\r\n   *\r\n   * @returns {HSVAColor}\r\n   */\r\n  toObject() {\r\n    return new HSVAColor(this.hue, this.saturation, this.value, this.alpha);\r\n  }\r\n\r\n  /**\r\n   * Alias of toObject()\r\n   *\r\n   * @returns {HSVAColor}\r\n   */\r\n  toHsva() {\r\n    return this.toObject();\r\n  }\r\n\r\n  /**\r\n   * Returns a new HSVAColor object with the ratio values (from 0.0 to 1.0),\r\n   * based on the current color.\r\n   *\r\n   * @ignore\r\n   * @returns {HSVAColor}\r\n   */\r\n  toHsvaRatio() {\r\n    return new HSVAColor(this.hue / 360, this.saturation / 100, this.value / 100, this.alpha);\r\n  }\r\n\r\n  /**\r\n   * Converts the current color to its string representation,\r\n   * using the internal format of this instance.\r\n   *\r\n   * @returns {String}\r\n   */\r\n  toString() {\r\n    return this.string();\r\n  }\r\n\r\n  /**\r\n   * Converts the current color to its string representation,\r\n   * using the given format.\r\n   *\r\n   * @param {String|null} format Format to convert to. If empty or null, the internal format will be used.\r\n   * @returns {String}\r\n   */\r\n  string(format = null) {\r\n    format = ColorItem.sanitizeFormat(format ? format : this.format);\r\n\r\n    if (!format) {\r\n      return this._color.round().string();\r\n    }\r\n\r\n    if (this._color[format] === undefined) {\r\n      throw new Error(`Unsupported color format: '${format}'`);\r\n    }\r\n\r\n    let str = this._color[format]();\r\n\r\n    return str.round ? str.round().string() : str;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given color values equals this one, false otherwise.\r\n   * The format is not compared.\r\n   * If any of the colors is invalid, the result will be false.\r\n   *\r\n   * @param {ColorItem|HSVAColor|QixColor|String|*|null} color Color data\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  equals(color) {\r\n    color = color instanceof ColorItem ? color : new ColorItem(color);\r\n\r\n    if (!color.isValid() || !this.isValid()) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      this.hue === color.hue &&\r\n\t\t\tthis.saturation === color.saturation &&\r\n\t\t\tthis.value === color.value &&\r\n\t\t\tthis.alpha === color.alpha\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a copy of this instance\r\n   *\r\n   * @returns {ColorItem}\r\n   */\r\n  getClone() {\r\n    return new ColorItem(this._color, this.format);\r\n  }\r\n\r\n  /**\r\n   * Creates a copy of this instance, only copying the hue value,\r\n   * and setting the others to its max value.\r\n   *\r\n   * @returns {ColorItem}\r\n   */\r\n  getCloneHueOnly() {\r\n    return new ColorItem([ this.hue, 100, 100, 1 ], this.format);\r\n  }\r\n\r\n  /**\r\n   * Creates a copy of this instance setting the alpha to the max.\r\n   *\r\n   * @returns {ColorItem}\r\n   */\r\n  getCloneOpaque() {\r\n    return new ColorItem(this._color.alpha(1), this.format);\r\n  }\r\n\r\n  /**\r\n   * Converts the color to a RGB string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  toRgbString() {\r\n    return this.string('rgb');\r\n  }\r\n\r\n  /**\r\n   * Converts the color to a Hexadecimal string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  toHexString() {\r\n    return this.string('hex');\r\n  }\r\n\r\n  /**\r\n   * Converts the color to a HSL string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  toHslString() {\r\n    return this.string('hsl');\r\n  }\r\n\r\n  /**\r\n   * Returns true if the color is dark, false otherwhise.\r\n   * This is useful to decide a text color.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isDark() {\r\n    return this._color.isDark();\r\n  }\r\n\r\n  /**\r\n   * Returns true if the color is light, false otherwhise.\r\n   * This is useful to decide a text color.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isLight() {\r\n    return this._color.isLight();\r\n  }\r\n\r\n  /**\r\n   * Generates a list of colors using the given hue-based formula or the given array of hue values.\r\n   * Hue formulas can be extended using ColorItem.colorFormulas static property.\r\n   *\r\n   * @param {String|Number[]} formula Examples: 'complementary', 'triad', 'tetrad', 'splitcomplement', [180, 270]\r\n   * @example let colors = color.generate('triad');\r\n   * @example let colors = color.generate([45, 80, 112, 200]);\r\n   * @returns {ColorItem[]}\r\n   */\r\n  generate(formula) {\r\n    let hues = [];\r\n\r\n    if (Array.isArray(formula)) {\r\n      hues = formula;\r\n    } else if (!ColorItem.colorFormulas.hasOwnProperty(formula)) {\r\n      throw new Error(`No color formula found with the name '${formula}'.`);\r\n    } else {\r\n      hues = ColorItem.colorFormulas[formula];\r\n    }\r\n\r\n    let colors = [],\r\n      mainColor = this._color,\r\n      format = this.format;\r\n\r\n    hues.forEach(function (hue) {\r\n      let levels = [\r\n        hue ? (mainColor.hue() + hue) % 360 : mainColor.hue(),\r\n        mainColor.saturationv(),\r\n        mainColor.value(),\r\n        mainColor.alpha()\r\n      ];\r\n\r\n      colors.push(new ColorItem(levels, format));\r\n    });\r\n\r\n    return colors;\r\n  }\r\n}\r\n\r\n/**\r\n * List of hue-based color formulas used by ColorItem.prototype.generate()\r\n *\r\n * @static\r\n * @type {{complementary: number[], triad: number[], tetrad: number[], splitcomplement: number[]}}\r\n */\r\nColorItem.colorFormulas = {\r\n  complementary: [ 180 ],\r\n  triad: [ 0, 120, 240 ],\r\n  tetrad: [ 0, 90, 180, 270 ],\r\n  splitcomplement: [ 0, 72, 216 ]\r\n};\r\n\r\nexport default ColorItem;\r\n\r\nexport { HSVAColor, ColorItem };\r\n","'use strict';\r\n/**\r\n * @module\r\n */\r\n\r\n// adjust these values accordingly to the sass vars\r\nlet sassVars = {\r\n  'bar_size_short': 16,\r\n  'base_margin': 6,\r\n  'columns': 6\r\n};\r\n\r\nlet sliderSize = (sassVars.bar_size_short * sassVars.columns) + (sassVars.base_margin * (sassVars.columns - 1));\r\n\r\n/**\r\n * Colorpicker default options\r\n */\r\nexport default {\r\n  /**\r\n   * Custom class to be added to the `.colorpicker-element` element\r\n   *\r\n   * @type {String|null}\r\n   * @default null\r\n   */\r\n  customClass: null,\r\n  /**\r\n   * Sets a initial color, ignoring the one from the element/input value or the data-color attribute.\r\n   *\r\n   * @type {(String|ColorItem|boolean)}\r\n   * @default false\r\n   */\r\n  color: false,\r\n  /**\r\n   * Fallback color to use when the given color is invalid.\r\n   * If false, the latest valid color will be used as a fallback.\r\n   *\r\n   * @type {String|ColorItem|boolean}\r\n   * @default false\r\n   */\r\n  fallbackColor: false,\r\n  /**\r\n   * Forces an specific color format. If 'auto', it will be automatically detected the first time only,\r\n   * but if null it will be always recalculated.\r\n   *\r\n   * Note that the ending 'a' of the format meaning \"alpha\" has currently no effect, meaning that rgb is the same as\r\n   * rgba excepting if the alpha channel is disabled (see useAlpha).\r\n   *\r\n   * @type {('rgb'|'hex'|'hsl'|'auto'|null)}\r\n   * @default 'auto'\r\n   */\r\n  format: 'auto',\r\n  /**\r\n   * Horizontal mode layout.\r\n   *\r\n   * If true, the hue and alpha channel bars will be rendered horizontally, above the saturation selector.\r\n   *\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  horizontal: false,\r\n  /**\r\n   * Forces to show the colorpicker as an inline element.\r\n   *\r\n   * Note that if there is no container specified, the inline element\r\n   * will be added to the body, so you may want to set the container option.\r\n   *\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  inline: false,\r\n  /**\r\n   * Container where the colorpicker is appended to in the DOM.\r\n   *\r\n   * If is a string (CSS selector), the colorpicker will be placed inside this container.\r\n   * If true, the `.colorpicker-element` element itself will be used as the container.\r\n   * If false, the document body is used as the container, unless it is a popover (in this case it is appended to the\r\n   * popover body instead).\r\n   *\r\n   * @type {String|boolean}\r\n   * @default false\r\n   */\r\n  container: false,\r\n  /**\r\n   * Bootstrap Popover options.\r\n   * The trigger, content and html options are always ignored.\r\n   *\r\n   * @type {boolean}\r\n   * @default Object\r\n   */\r\n  popover: {\r\n    animation: true,\r\n    placement: 'bottom',\r\n    fallbackPlacement: 'flip'\r\n  },\r\n  /**\r\n   * If true, loads the 'debugger' extension automatically, which logs the events in the console\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  debug: false,\r\n  /**\r\n   * Child CSS selector for the colorpicker input.\r\n   *\r\n   * @type {String}\r\n   * @default 'input'\r\n   */\r\n  input: 'input',\r\n  /**\r\n   * Child CSS selector for the colorpicker addon.\r\n   * If it exists, the child <i> element background will be changed on color change.\r\n   *\r\n   * @type {String}\r\n   * @default '.colorpicker-trigger, .colorpicker-input-addon'\r\n   */\r\n  addon: '.colorpicker-input-addon',\r\n  /**\r\n   * If true, the input content will be replaced always with a valid color,\r\n   * if false, the invalid color will be left in the input,\r\n   *   while the internal color object will still resolve into a valid one.\r\n   *\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  autoInputFallback: true,\r\n  /**\r\n   * If true a hash will be prepended to hexadecimal colors.\r\n   * If false, the hash will be removed.\r\n   * This only affects the input values in hexadecimal format.\r\n   *\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  useHashPrefix: true,\r\n  /**\r\n   * If true, the alpha channel bar will be displayed no matter what.\r\n   *\r\n   * If false, it will be always hidden and alpha channel will be disabled also programmatically, meaning that\r\n   * the selected or typed color will be always opaque.\r\n   *\r\n   * If null, the alpha channel will be automatically disabled/enabled depending if the initial color format supports\r\n   * alpha or not.\r\n   *\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  useAlpha: true,\r\n  /**\r\n   * Colorpicker widget template\r\n   * @type {String}\r\n   * @example\r\n   * <!-- This is the default template: -->\r\n   * <div class=\"colorpicker\">\r\n   *   <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"></i></div>\r\n   *   <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\r\n   *   <div class=\"colorpicker-alpha\">\r\n   *     <div class=\"colorpicker-alpha-color\"></div>\r\n   *     <i class=\"colorpicker-guide\"></i>\r\n   *   </div>\r\n   * </div>\r\n   */\r\n  template: `<div class=\"colorpicker\">\r\n      <div class=\"colorpicker-saturation\"><i class=\"colorpicker-guide\"></i></div>\r\n      <div class=\"colorpicker-hue\"><i class=\"colorpicker-guide\"></i></div>\r\n      <div class=\"colorpicker-alpha\">\r\n        <div class=\"colorpicker-alpha-color\"></div>\r\n        <i class=\"colorpicker-guide\"></i>\r\n      </div>\r\n    </div>`,\r\n  /**\r\n   *\r\n   * Associative object with the extension class name and its config.\r\n   * Colorpicker comes with many bundled extensions: debugger, palette, preview and swatches (a superset of palette).\r\n   *\r\n   * @type {Object[]}\r\n   * @example\r\n   *   extensions: [\r\n   *     {\r\n   *       name: 'swatches'\r\n   *       options: {\r\n   *         colors: {\r\n   *           'primary': '#337ab7',\r\n   *           'success': '#5cb85c',\r\n   *           'info': '#5bc0de',\r\n   *           'warning': '#f0ad4e',\r\n   *           'danger': '#d9534f'\r\n   *         },\r\n   *         namesAsValues: true\r\n   *       }\r\n   *     }\r\n   *   ]\r\n   */\r\n  extensions: [\r\n    {\r\n      name: 'preview',\r\n      options: {\r\n        showText: true\r\n      }\r\n    }\r\n  ],\r\n  /**\r\n   * Vertical sliders configuration\r\n   * @type {Object}\r\n   */\r\n  sliders: {\r\n    saturation: {\r\n      selector: '.colorpicker-saturation',\r\n      maxLeft: sliderSize,\r\n      maxTop: sliderSize,\r\n      callLeft: 'setSaturationRatio',\r\n      callTop: 'setValueRatio'\r\n    },\r\n    hue: {\r\n      selector: '.colorpicker-hue',\r\n      maxLeft: 0,\r\n      maxTop: sliderSize,\r\n      callLeft: false,\r\n      callTop: 'setHueRatio'\r\n    },\r\n    alpha: {\r\n      selector: '.colorpicker-alpha',\r\n      childSelector: '.colorpicker-alpha-color',\r\n      maxLeft: 0,\r\n      maxTop: sliderSize,\r\n      callLeft: false,\r\n      callTop: 'setAlphaRatio'\r\n    }\r\n  },\r\n  /**\r\n   * Horizontal sliders configuration\r\n   * @type {Object}\r\n   */\r\n  slidersHorz: {\r\n    saturation: {\r\n      selector: '.colorpicker-saturation',\r\n      maxLeft: sliderSize,\r\n      maxTop: sliderSize,\r\n      callLeft: 'setSaturationRatio',\r\n      callTop: 'setValueRatio'\r\n    },\r\n    hue: {\r\n      selector: '.colorpicker-hue',\r\n      maxLeft: sliderSize,\r\n      maxTop: 0,\r\n      callLeft: 'setHueRatio',\r\n      callTop: false\r\n    },\r\n    alpha: {\r\n      selector: '.colorpicker-alpha',\r\n      childSelector: '.colorpicker-alpha-color',\r\n      maxLeft: sliderSize,\r\n      maxTop: 0,\r\n      callLeft: 'setAlphaRatio',\r\n      callTop: false\r\n    }\r\n  }\r\n};\r\n","'use strict';\r\n\r\nimport Extension from 'Extension';\r\nimport $ from 'jquery';\r\n\r\nlet defaults = {\r\n  /**\r\n   * Key-value pairs defining a color alias and its CSS color representation.\r\n   *\r\n   * They can also be just an array of values. In that case, no special names are used, only the real colors.\r\n   *\r\n   * @type {Object|Array}\r\n   * @default null\r\n   * @example\r\n   *  {\r\n   *   'black': '#000000',\r\n   *   'white': '#ffffff',\r\n   *   'red': '#FF0000',\r\n   *   'default': '#777777',\r\n   *   'primary': '#337ab7',\r\n   *   'success': '#5cb85c',\r\n   *   'info': '#5bc0de',\r\n   *   'warning': '#f0ad4e',\r\n   *   'danger': '#d9534f'\r\n   *  }\r\n   *\r\n   * @example ['#f0ad4e', '#337ab7', '#5cb85c']\r\n   */\r\n  colors: null,\r\n  /**\r\n   * If true, when a color swatch is selected the name (alias) will be used as input value,\r\n   * otherwise the swatch real color value will be used.\r\n   *\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  namesAsValues: true\r\n};\r\n\r\n/**\r\n * Palette extension\r\n * @ignore\r\n */\r\nclass Palette extends Extension {\r\n\r\n  /**\r\n   * @returns {Object|Array}\r\n   */\r\n  get colors() {\r\n    return this.options.colors;\r\n  }\r\n\r\n  constructor(colorpicker, options = {}) {\r\n    super(colorpicker, $.extend(true, {}, defaults, options));\r\n\r\n    if ((!Array.isArray(this.options.colors)) && (typeof this.options.colors !== 'object')) {\r\n      this.options.colors = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {int}\r\n   */\r\n  getLength() {\r\n    if (!this.options.colors) {\r\n      return 0;\r\n    }\r\n\r\n    if (Array.isArray(this.options.colors)) {\r\n      return this.options.colors.length;\r\n    }\r\n\r\n    if (typeof this.options.colors === 'object') {\r\n      return Object.keys(this.options.colors).length;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  resolveColor(color, realColor = true) {\r\n    if (this.getLength() <= 0) {\r\n      return false;\r\n    }\r\n\r\n    // Array of colors\r\n    if (Array.isArray(this.options.colors)) {\r\n      if (this.options.colors.indexOf(color) >= 0) {\r\n        return color;\r\n      }\r\n      if (this.options.colors.indexOf(color.toUpperCase()) >= 0) {\r\n        return color.toUpperCase();\r\n      }\r\n      if (this.options.colors.indexOf(color.toLowerCase()) >= 0) {\r\n        return color.toLowerCase();\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (typeof this.options.colors !== 'object') {\r\n      return false;\r\n    }\r\n\r\n    // Map of objects\r\n    if (!this.options.namesAsValues || realColor) {\r\n      return this.getValue(color, false);\r\n    }\r\n    return this.getName(color, this.getName('#' + color));\r\n  }\r\n\r\n  /**\r\n   * Given a color value, returns the corresponding color name or defaultValue.\r\n   *\r\n   * @param {String} value\r\n   * @param {*} defaultValue\r\n   * @returns {*}\r\n   */\r\n  getName(value, defaultValue = false) {\r\n    if (!(typeof value === 'string') || !this.options.colors) {\r\n      return defaultValue;\r\n    }\r\n    for (let name in this.options.colors) {\r\n      if (!this.options.colors.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      if (this.options.colors[name].toLowerCase() === value.toLowerCase()) {\r\n        return name;\r\n      }\r\n    }\r\n    return defaultValue;\r\n  }\r\n\r\n  /**\r\n   * Given a color name, returns the corresponding color value or defaultValue.\r\n   *\r\n   * @param {String} name\r\n   * @param {*} defaultValue\r\n   * @returns {*}\r\n   */\r\n  getValue(name, defaultValue = false) {\r\n    if (!(typeof name === 'string') || !this.options.colors) {\r\n      return defaultValue;\r\n    }\r\n    if (this.options.colors.hasOwnProperty(name)) {\r\n      return this.options.colors[name];\r\n    }\r\n    return defaultValue;\r\n  }\r\n}\r\n\r\nexport default Palette;\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","'use strict';\r\n\r\nimport Colorpicker from './Colorpicker';\r\nimport $ from 'jquery';\r\n\r\nlet plugin = 'colorpicker';\r\n\r\n$[plugin] = Colorpicker;\r\n\r\n// Colorpicker jQuery Plugin API\r\n$.fn[plugin] = function (option) {\r\n  let fnArgs = Array.prototype.slice.call(arguments, 1),\r\n    isSingleElement = (this.length === 1),\r\n    returnValue = null;\r\n\r\n  let $elements = this.each(function () {\r\n    let $this = $(this),\r\n      inst = $this.data(plugin),\r\n      options = ((typeof option === 'object') ? option : {});\r\n\r\n    // Create instance if does not exist\r\n    if (!inst) {\r\n      inst = new Colorpicker(this, options);\r\n      $this.data(plugin, inst);\r\n    }\r\n\r\n    if (!isSingleElement) {\r\n      return;\r\n    }\r\n\r\n    returnValue = $this;\r\n\r\n    if (typeof option === 'string') {\r\n      if (option === 'colorpicker') {\r\n        // Return colorpicker instance: e.g. .colorpicker('colorpicker')\r\n        returnValue = inst;\r\n      } else if ($.isFunction(inst[option])) {\r\n        // Return method call return value: e.g. .colorpicker('isEnabled')\r\n        returnValue = inst[option].apply(inst, fnArgs);\r\n      } else {\r\n        // Return property value: e.g. .colorpicker('element')\r\n        returnValue = inst[option];\r\n      }\r\n    }\r\n  });\r\n\r\n  return isSingleElement ? returnValue : $elements;\r\n};\r\n\r\n$.fn[plugin].constructor = Colorpicker;\r\n","'use strict';\r\n\r\nimport Extension from './Extension';\r\nimport defaults from './options';\r\nimport coreExtensions from 'extensions';\r\nimport $ from 'jquery';\r\nimport SliderHandler from './SliderHandler';\r\nimport PopupHandler from './PopupHandler';\r\nimport InputHandler from './InputHandler';\r\nimport ColorHandler from './ColorHandler';\r\nimport PickerHandler from './PickerHandler';\r\nimport AddonHandler from './AddonHandler';\r\nimport ColorItem from './ColorItem';\r\n\r\nlet colorPickerIdCounter = 0;\r\n\r\nlet root = typeof self !== 'undefined' ? self : this; // window\r\n\r\n/**\r\n * Colorpicker widget class\r\n */\r\nclass Colorpicker {\r\n  /**\r\n   * Color class\r\n   *\r\n   * @static\r\n   * @type {Color}\r\n   */\r\n  static get Color() {\r\n    return ColorItem;\r\n  }\r\n\r\n  /**\r\n   * Extension class\r\n   *\r\n   * @static\r\n   * @type {Extension}\r\n   */\r\n  static get Extension() {\r\n    return Extension;\r\n  }\r\n\r\n  /**\r\n   * Internal color object\r\n   *\r\n   * @type {Color|null}\r\n   */\r\n  get color() {\r\n    return this.colorHandler.color;\r\n  }\r\n\r\n  /**\r\n   * Internal color format\r\n   *\r\n   * @type {String|null}\r\n   */\r\n  get format() {\r\n    return this.colorHandler.format;\r\n  }\r\n\r\n  /**\r\n   * Getter of the picker element\r\n   *\r\n   * @returns {jQuery|HTMLElement}\r\n   */\r\n  get picker() {\r\n    return this.pickerHandler.picker;\r\n  }\r\n\r\n  /**\r\n   * @fires Colorpicker#colorpickerCreate\r\n   * @param {Object|String} element\r\n   * @param {Object} options\r\n   * @constructor\r\n   */\r\n  constructor(element, options) {\r\n    colorPickerIdCounter += 1;\r\n    /**\r\n     * The colorpicker instance number\r\n     * @type {number}\r\n     */\r\n    this.id = colorPickerIdCounter;\r\n\r\n    /**\r\n     * Latest colorpicker event\r\n     *\r\n     * @type {{name: String, e: *}}\r\n     */\r\n    this.lastEvent = {\r\n      alias: null,\r\n      e: null\r\n    };\r\n\r\n    /**\r\n     * The element that the colorpicker is bound to\r\n     *\r\n     * @type {*|jQuery}\r\n     */\r\n    this.element = $(element).addClass('colorpicker-element').attr('data-colorpicker-id', this.id);\r\n\r\n    /**\r\n     * @type {defaults}\r\n     */\r\n    this.options = $.extend(true, {}, defaults, options, this.element.data());\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.disabled = false;\r\n\r\n    /**\r\n     * Extensions added to this instance\r\n     *\r\n     * @type {Extension[]}\r\n     */\r\n    this.extensions = [];\r\n\r\n    /**\r\n     * The element where the\r\n     * @type {*|jQuery}\r\n     */\r\n    this.container =\r\n\t\t\tthis.options.container === true || (this.options.container !== true && this.options.inline === true) ?\r\n\t\t\t  this.element :\r\n\t\t\t  this.options.container;\r\n\r\n    this.container = this.container !== false ? $(this.container) : false;\r\n\r\n    /**\r\n     * @type {InputHandler}\r\n     */\r\n    this.inputHandler = new InputHandler(this);\r\n    /**\r\n     * @type {ColorHandler}\r\n     */\r\n    this.colorHandler = new ColorHandler(this);\r\n    /**\r\n     * @type {SliderHandler}\r\n     */\r\n    this.sliderHandler = new SliderHandler(this);\r\n    /**\r\n     * @type {PopupHandler}\r\n     */\r\n    this.popupHandler = new PopupHandler(this, root);\r\n    /**\r\n     * @type {PickerHandler}\r\n     */\r\n    this.pickerHandler = new PickerHandler(this);\r\n    /**\r\n     * @type {AddonHandler}\r\n     */\r\n    this.addonHandler = new AddonHandler(this);\r\n\r\n    this.init();\r\n\r\n    // Emit a create event\r\n    $(\r\n      $.proxy(function () {\r\n        /**\r\n       * (Colorpicker) When the Colorpicker instance has been created and the DOM is ready.\r\n       *\r\n       * @event Colorpicker#colorpickerCreate\r\n       */\r\n        this.trigger('colorpickerCreate');\r\n      }, this)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin\r\n   * @private\r\n   */\r\n  init() {\r\n    // Init addon\r\n    this.addonHandler.bind();\r\n\r\n    // Init input\r\n    this.inputHandler.bind();\r\n\r\n    // Init extensions (before initializing the color)\r\n    this.initExtensions();\r\n\r\n    // Init color\r\n    this.colorHandler.bind();\r\n\r\n    // Init picker\r\n    this.pickerHandler.bind();\r\n\r\n    // Init sliders and popup\r\n    this.sliderHandler.bind();\r\n    this.popupHandler.bind();\r\n\r\n    // Inject into the DOM (this may make it visible)\r\n    this.pickerHandler.attach();\r\n\r\n    // Update all components\r\n    this.update();\r\n\r\n    if (this.inputHandler.isDisabled()) {\r\n      this.disable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the plugin extensions\r\n   * @private\r\n   */\r\n  initExtensions() {\r\n    if (!Array.isArray(this.options.extensions)) {\r\n      this.options.extensions = [];\r\n    }\r\n\r\n    if (this.options.debug) {\r\n      this.options.extensions.push({ name: 'debugger' });\r\n    }\r\n\r\n    // Register and instantiate extensions\r\n    this.options.extensions.forEach((ext) => {\r\n      this.registerExtension(Colorpicker.extensions[ext.name.toLowerCase()], ext.options || {});\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates and registers the given extension\r\n   *\r\n   * @param {Extension} ExtensionClass The extension class to instantiate\r\n   * @param {Object} [config] Extension configuration\r\n   * @returns {Extension}\r\n   */\r\n  registerExtension(ExtensionClass, config = {}) {\r\n    let ext = new ExtensionClass(this, config);\r\n\r\n    this.extensions.push(ext);\r\n    return ext;\r\n  }\r\n\r\n  /**\r\n   * Destroys the current instance\r\n   *\r\n   * @fires Colorpicker#colorpickerDestroy\r\n   */\r\n  destroy() {\r\n    let color = this.color;\r\n\r\n    this.sliderHandler.unbind();\r\n    this.inputHandler.unbind();\r\n    this.popupHandler.unbind();\r\n    this.colorHandler.unbind();\r\n    this.addonHandler.unbind();\r\n    this.pickerHandler.unbind();\r\n\r\n    this.element.removeClass('colorpicker-element').removeData('colorpicker', 'color').off('.colorpicker');\r\n\r\n    /**\r\n     * (Colorpicker) When the instance is destroyed with all events unbound.\r\n     *\r\n     * @event Colorpicker#colorpickerDestroy\r\n     */\r\n    this.trigger('colorpickerDestroy', color);\r\n  }\r\n\r\n  /**\r\n   * Shows the colorpicker widget if hidden.\r\n   * If the colorpicker is disabled this call will be ignored.\r\n   *\r\n   * @fires Colorpicker#colorpickerShow\r\n   * @param {Event} [e]\r\n   */\r\n  show(e) {\r\n    this.popupHandler.show(e);\r\n  }\r\n\r\n  /**\r\n   * Hides the colorpicker widget.\r\n   *\r\n   * @fires Colorpicker#colorpickerHide\r\n   * @param {Event} [e]\r\n   */\r\n  hide(e) {\r\n    this.popupHandler.hide(e);\r\n  }\r\n\r\n  /**\r\n   * Toggles the colorpicker between visible and hidden.\r\n   *\r\n   * @fires Colorpicker#colorpickerShow\r\n   * @fires Colorpicker#colorpickerHide\r\n   * @param {Event} [e]\r\n   */\r\n  toggle(e) {\r\n    this.popupHandler.toggle(e);\r\n  }\r\n\r\n  /**\r\n   * Returns the current color value as string\r\n   *\r\n   * @param {String|*} [defaultValue]\r\n   * @returns {String|*}\r\n   */\r\n  getValue(defaultValue = null) {\r\n    let val = this.colorHandler.color;\r\n\r\n    val = val instanceof ColorItem ? val : defaultValue;\r\n\r\n    if (val instanceof ColorItem) {\r\n      return val.string(this.format);\r\n    }\r\n\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Sets the color manually\r\n   *\r\n   * @fires Colorpicker#colorpickerChange\r\n   * @param {String|Color} val\r\n   */\r\n  setValue(val) {\r\n    if (this.isDisabled()) {\r\n      return;\r\n    }\r\n    let ch = this.colorHandler;\r\n\r\n    if ((ch.hasColor() && !!val && ch.color.equals(val)) || (!ch.hasColor() && !val)) {\r\n      // same color or still empty\r\n      return;\r\n    }\r\n\r\n    ch.color = val ? ch.createColor(val, this.options.autoInputFallback) : null;\r\n\r\n    /**\r\n     * (Colorpicker) When the color is set programmatically with setValue().\r\n     *\r\n     * @event Colorpicker#colorpickerChange\r\n     */\r\n    this.trigger('colorpickerChange', ch.color, val);\r\n\r\n    // force update if color has changed to empty\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Updates the UI and the input color according to the internal color.\r\n   *\r\n   * @fires Colorpicker#colorpickerUpdate\r\n   */\r\n  update() {\r\n    if (this.colorHandler.hasColor()) {\r\n      this.inputHandler.updateFromPicker();\r\n    } else {\r\n      this.colorHandler.assureColor();\r\n    }\r\n\r\n    this.addonHandler.update();\r\n    this.pickerHandler.update();\r\n\r\n    /**\r\n     * (Colorpicker) Fired when the widget is updated.\r\n     *\r\n     * @event Colorpicker#colorpickerUpdate\r\n     */\r\n    this.trigger('colorpickerUpdate');\r\n  }\r\n\r\n  /**\r\n   * Enables the widget and the input if any\r\n   *\r\n   * @fires Colorpicker#colorpickerEnable\r\n   * @returns {boolean}\r\n   */\r\n  enable() {\r\n    this.inputHandler.enable();\r\n    this.disabled = false;\r\n    this.picker.removeClass('colorpicker-disabled');\r\n\r\n    /**\r\n     * (Colorpicker) When the widget has been enabled.\r\n     *\r\n     * @event Colorpicker#colorpickerEnable\r\n     */\r\n    this.trigger('colorpickerEnable');\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Disables the widget and the input if any\r\n   *\r\n   * @fires Colorpicker#colorpickerDisable\r\n   * @returns {boolean}\r\n   */\r\n  disable() {\r\n    this.inputHandler.disable();\r\n    this.disabled = true;\r\n    this.picker.addClass('colorpicker-disabled');\r\n\r\n    /**\r\n     * (Colorpicker) When the widget has been disabled.\r\n     *\r\n     * @event Colorpicker#colorpickerDisable\r\n     */\r\n    this.trigger('colorpickerDisable');\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Returns true if this instance is enabled\r\n   * @returns {boolean}\r\n   */\r\n  isEnabled() {\r\n    return !this.isDisabled();\r\n  }\r\n\r\n  /**\r\n   * Returns true if this instance is disabled\r\n   * @returns {boolean}\r\n   */\r\n  isDisabled() {\r\n    return this.disabled === true;\r\n  }\r\n\r\n  /**\r\n   * Triggers a Colorpicker event.\r\n   *\r\n   * @param eventName\r\n   * @param color\r\n   * @param value\r\n   */\r\n  trigger(eventName, color = null, value = null) {\r\n    this.element.trigger({\r\n      type: eventName,\r\n      colorpicker: this,\r\n      color: color ? color : this.color,\r\n      value: value ? value : this.getValue()\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Colorpicker extension classes, indexed by extension name\r\n *\r\n * @static\r\n * @type {Object} a map between the extension name and its class\r\n */\r\nColorpicker.extensions = coreExtensions;\r\n\r\nexport default Colorpicker;\r\n","import Debugger from './Debugger';\r\nimport Preview from './Preview';\r\nimport Swatches from './Swatches';\r\nimport Palette from './Palette';\r\n\r\nexport {\r\n  Debugger, Preview, Swatches, Palette\r\n};\r\n\r\nexport default {\r\n  'debugger': Debugger,\r\n  'preview': Preview,\r\n  'swatches': Swatches,\r\n  'palette': Palette\r\n};\r\n","'use strict';\r\n\r\nimport Extension from 'Extension';\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Debugger extension class\r\n * @alias DebuggerExtension\r\n * @ignore\r\n */\r\nclass Debugger extends Extension {\r\n  constructor(colorpicker, options = {}) {\r\n    super(colorpicker, options);\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.eventCounter = 0;\r\n    if (this.colorpicker.inputHandler.hasInput()) {\r\n      this.colorpicker.inputHandler.input.on('change.colorpicker-ext', $.proxy(this.onChangeInput, this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @fires DebuggerExtension#colorpickerDebug\r\n   * @param {string} eventName\r\n   * @param {*} args\r\n   */\r\n  log(eventName, ...args) {\r\n    this.eventCounter += 1;\r\n\r\n    let logMessage = `#${this.eventCounter}: Colorpicker#${this.colorpicker.id} [${eventName}]`;\r\n\r\n    console.debug(logMessage, ...args);\r\n\r\n    /**\r\n     * Whenever the debugger logs an event, this other event is emitted.\r\n     *\r\n     * @event DebuggerExtension#colorpickerDebug\r\n     * @type {object} The event object\r\n     * @property {Colorpicker} colorpicker The Colorpicker instance\r\n     * @property {ColorItem} color The color instance\r\n     * @property {{debugger: DebuggerExtension, eventName: String, logArgs: Array, logMessage: String}} debug\r\n     *  The debug info\r\n     */\r\n    this.colorpicker.element.trigger({\r\n      type: 'colorpickerDebug',\r\n      colorpicker: this.colorpicker,\r\n      color: this.color,\r\n      value: null,\r\n      debug: {\r\n        debugger: this,\r\n        eventName: eventName,\r\n        logArgs: args,\r\n        logMessage: logMessage\r\n      }\r\n    });\r\n  }\r\n\r\n  resolveColor(color, realColor = true) {\r\n    this.log('resolveColor()', color, realColor);\r\n    return false;\r\n  }\r\n\r\n  onCreate(event) {\r\n    this.log('colorpickerCreate');\r\n    return super.onCreate(event);\r\n  }\r\n\r\n  onDestroy(event) {\r\n    this.log('colorpickerDestroy');\r\n    this.eventCounter = 0;\r\n\r\n    if (this.colorpicker.inputHandler.hasInput()) {\r\n      this.colorpicker.inputHandler.input.off('.colorpicker-ext');\r\n    }\r\n\r\n    return super.onDestroy(event);\r\n  }\r\n\r\n  onUpdate(event) {\r\n    this.log('colorpickerUpdate');\r\n  }\r\n\r\n  /**\r\n   * @listens Colorpicker#change\r\n   * @param {Event} event\r\n   */\r\n  onChangeInput(event) {\r\n    this.log('input:change.colorpicker', event.value, event.color);\r\n  }\r\n\r\n  onChange(event) {\r\n    this.log('colorpickerChange', event.value, event.color);\r\n  }\r\n\r\n  onInvalid(event) {\r\n    this.log('colorpickerInvalid', event.value, event.color);\r\n  }\r\n\r\n  onHide(event) {\r\n    this.log('colorpickerHide');\r\n    this.eventCounter = 0;\r\n  }\r\n\r\n  onShow(event) {\r\n    this.log('colorpickerShow');\r\n  }\r\n\r\n  onDisable(event) {\r\n    this.log('colorpickerDisable');\r\n  }\r\n\r\n  onEnable(event) {\r\n    this.log('colorpickerEnable');\r\n  }\r\n}\r\n\r\nexport default Debugger;\r\n","'use strict';\r\n\r\nimport Extension from 'Extension';\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Color preview extension\r\n * @ignore\r\n */\r\nclass Preview extends Extension {\r\n  constructor(colorpicker, options = {}) {\r\n    super(colorpicker, $.extend(true, {},\r\n      {\r\n        template: '<div class=\"colorpicker-bar colorpicker-preview\"><div /></div>',\r\n        showText: true,\r\n        format: colorpicker.format\r\n      },\r\n      options\r\n    ));\r\n\r\n    this.element = $(this.options.template);\r\n    this.elementInner = this.element.find('div');\r\n  }\r\n\r\n  onCreate(event) {\r\n    super.onCreate(event);\r\n    this.colorpicker.picker.append(this.element);\r\n  }\r\n\r\n  onUpdate(event) {\r\n    super.onUpdate(event);\r\n\r\n    if (!event.color) {\r\n      this.elementInner\r\n        .css('backgroundColor', null)\r\n        .css('color', null)\r\n        .html('');\r\n      return;\r\n    }\r\n\r\n    this.elementInner\r\n      .css('backgroundColor', event.color.toRgbString());\r\n\r\n    if (this.options.showText) {\r\n      this.elementInner\r\n        .html(event.color.string(this.options.format || this.colorpicker.format));\r\n\r\n      if (event.color.isDark() && (event.color.alpha > 0.5)) {\r\n        this.elementInner.css('color', 'white');\r\n      } else {\r\n        this.elementInner.css('color', 'black');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","'use strict';\r\n\r\nimport Palette from './Palette';\r\nimport $ from 'jquery';\r\n\r\nlet defaults = {\r\n  barTemplate: `<div class=\"colorpicker-bar colorpicker-swatches\">\r\n                    <div class=\"colorpicker-swatches--inner\"></div>\r\n                </div>`,\r\n  swatchTemplate: '<i class=\"colorpicker-swatch\"><i class=\"colorpicker-swatch--inner\"></i></i>'\r\n};\r\n\r\n/**\r\n * Color swatches extension\r\n * @ignore\r\n */\r\nclass Swatches extends Palette {\r\n  constructor(colorpicker, options = {}) {\r\n    super(colorpicker, $.extend(true, {}, defaults, options));\r\n    this.element = null;\r\n  }\r\n\r\n  isEnabled() {\r\n    return this.getLength() > 0;\r\n  }\r\n\r\n  onCreate(event) {\r\n    super.onCreate(event);\r\n\r\n    if (!this.isEnabled()) {\r\n      return;\r\n    }\r\n\r\n    this.element = $(this.options.barTemplate);\r\n    this.load();\r\n    this.colorpicker.picker.append(this.element);\r\n  }\r\n\r\n  load() {\r\n    let colorpicker = this.colorpicker,\r\n      swatchContainer = this.element.find('.colorpicker-swatches--inner'),\r\n      isAliased = (this.options.namesAsValues === true) && !Array.isArray(this.colors);\r\n\r\n    swatchContainer.empty();\r\n\r\n    $.each(this.colors, (name, value) => {\r\n      let $swatch = $(this.options.swatchTemplate)\r\n        .attr('data-name', name)\r\n        .attr('data-value', value)\r\n        .attr('title', isAliased ? `${name}: ${value}` : value)\r\n        .on('mousedown.colorpicker touchstart.colorpicker',\r\n          function (e) {\r\n            let $sw = $(this);\r\n\r\n            // e.preventDefault();\r\n\r\n            colorpicker.setValue(isAliased ? $sw.attr('data-name') : $sw.attr('data-value'));\r\n          }\r\n        );\r\n\r\n      $swatch.find('.colorpicker-swatch--inner')\r\n        .css('background-color', value);\r\n\r\n      swatchContainer.append($swatch);\r\n    });\r\n\r\n    swatchContainer.append($('<i class=\"colorpicker-clear\"></i>'));\r\n  }\r\n}\r\n\r\nexport default Swatches;\r\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Class that handles all configured sliders on mouse or touch events.\r\n * @ignore\r\n */\r\nclass SliderHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   */\r\n  constructor(colorpicker) {\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * @type {*|String}\r\n     * @private\r\n     */\r\n    this.currentSlider = null;\r\n    /**\r\n     * @type {{left: number, top: number}}\r\n     * @private\r\n     */\r\n    this.mousePointer = {\r\n      left: 0,\r\n      top: 0\r\n    };\r\n\r\n    /**\r\n     * @type {Function}\r\n     */\r\n    this.onMove = $.proxy(this.defaultOnMove, this);\r\n  }\r\n\r\n  /**\r\n   * This function is called every time a slider guide is moved\r\n   * The scope of \"this\" is the SliderHandler object.\r\n   *\r\n   * @param {int} top\r\n   * @param {int} left\r\n   */\r\n  defaultOnMove(top, left) {\r\n    if (!this.currentSlider) {\r\n      return;\r\n    }\r\n\r\n    let slider = this.currentSlider, cp = this.colorpicker, ch = cp.colorHandler;\r\n\r\n    // Create a color object\r\n    let color = !ch.hasColor() ? ch.getFallbackColor() : ch.color.getClone();\r\n\r\n    // Adjust the guide position\r\n    slider.guideStyle.left = left + 'px';\r\n    slider.guideStyle.top = top + 'px';\r\n\r\n    // Adjust the color\r\n    if (slider.callLeft) {\r\n      color[slider.callLeft](left / slider.maxLeft);\r\n    }\r\n    if (slider.callTop) {\r\n      color[slider.callTop](top / slider.maxTop);\r\n    }\r\n\r\n    // Set the new color\r\n    cp.setValue(color);\r\n    cp.popupHandler.focus();\r\n  }\r\n\r\n  /**\r\n   * Binds the colorpicker sliders to the mouse/touch events\r\n   */\r\n  bind() {\r\n    let sliders = this.colorpicker.options.horizontal ? this.colorpicker\r\n      .options.slidersHorz : this.colorpicker.options.sliders;\r\n\r\n    let sliderClasses = [];\r\n\r\n    for (let sliderName in sliders) {\r\n      if (!sliders.hasOwnProperty(sliderName)) {\r\n        continue;\r\n      }\r\n\r\n      sliderClasses.push(sliders[sliderName].selector);\r\n    }\r\n\r\n    this.colorpicker.picker.find(sliderClasses.join(', '))\r\n      .on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.pressed, this));\r\n  }\r\n\r\n  /**\r\n   * Unbinds any event bound by this handler\r\n   */\r\n  unbind() {\r\n    $(this.colorpicker.picker).off({\r\n      'mousemove.colorpicker': $.proxy(this.moved, this),\r\n      'touchmove.colorpicker': $.proxy(this.moved, this),\r\n      'mouseup.colorpicker': $.proxy(this.released, this),\r\n      'touchend.colorpicker': $.proxy(this.released, this)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function triggered when clicking in one of the color adjustment bars\r\n   *\r\n   * @private\r\n   * @fires Colorpicker#mousemove\r\n   * @param {Event} e\r\n   */\r\n  pressed(e) {\r\n    if (this.colorpicker.isDisabled()) {\r\n      return;\r\n    }\r\n    this.colorpicker.lastEvent.alias = 'pressed';\r\n    this.colorpicker.lastEvent.e = e;\r\n\r\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\r\n      e.pageX = e.originalEvent.touches[0].pageX;\r\n      e.pageY = e.originalEvent.touches[0].pageY;\r\n    }\r\n    // e.stopPropagation();\r\n    // e.preventDefault();\r\n\r\n    let target = $(e.target);\r\n\r\n    // detect the slider and set the limits and callbacks\r\n    let zone = target.closest('div');\r\n\r\n    let sliders = this.colorpicker.options.horizontal ? this.colorpicker\r\n      .options.slidersHorz : this.colorpicker.options.sliders;\r\n\r\n    if (zone.is('.colorpicker')) {\r\n      return;\r\n    }\r\n\r\n    this.currentSlider = null;\r\n\r\n    for (let sliderName in sliders) {\r\n      if (!sliders.hasOwnProperty(sliderName)) {\r\n        continue;\r\n      }\r\n\r\n      let slider = sliders[sliderName];\r\n\r\n      if (zone.is(slider.selector)) {\r\n        this.currentSlider = $.extend({}, slider, {name: sliderName});\r\n        break;\r\n      } else if (slider.childSelector !== undefined && zone.is(slider.childSelector)) {\r\n        this.currentSlider = $.extend({}, slider, {name: sliderName});\r\n        zone = zone.parent(); // zone.parents(slider.selector).first() ?\r\n        break;\r\n      }\r\n    }\r\n\r\n    let guide = zone.find('.colorpicker-guide').get(0);\r\n\r\n    if (this.currentSlider === null || guide === null) {\r\n      return;\r\n    }\r\n\r\n    let offset = zone.offset();\r\n\r\n    // reference to guide's style\r\n    this.currentSlider.guideStyle = guide.style;\r\n    this.currentSlider.left = e.pageX - offset.left;\r\n    this.currentSlider.top = e.pageY - offset.top;\r\n    this.mousePointer = {\r\n      left: e.pageX,\r\n      top: e.pageY\r\n    };\r\n\r\n    // TODO: fix moving outside the picker makes the guides to keep moving. The event needs to be bound to the window.\r\n    /**\r\n     * (window.document) Triggered on mousedown for the document object,\r\n     * so the color adjustment guide is moved to the clicked position.\r\n     *\r\n     * @event Colorpicker#mousemove\r\n     */\r\n    $(this.colorpicker.picker).on({\r\n      'mousemove.colorpicker': $.proxy(this.moved, this),\r\n      'touchmove.colorpicker': $.proxy(this.moved, this),\r\n      'mouseup.colorpicker': $.proxy(this.released, this),\r\n      'touchend.colorpicker': $.proxy(this.released, this)\r\n    }).trigger('mousemove');\r\n  }\r\n\r\n  /**\r\n   * Function triggered when dragging a guide inside one of the color adjustment bars.\r\n   *\r\n   * @private\r\n   * @param {Event} e\r\n   */\r\n  moved(e) {\r\n    this.colorpicker.lastEvent.alias = 'moved';\r\n    this.colorpicker.lastEvent.e = e;\r\n\r\n    if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\r\n      e.pageX = e.originalEvent.touches[0].pageX;\r\n      e.pageY = e.originalEvent.touches[0].pageY;\r\n    }\r\n\r\n    // e.stopPropagation();\r\n    e.preventDefault(); // prevents scrolling on mobile\r\n\r\n    let left = Math.max(\r\n      0,\r\n      Math.min(\r\n        this.currentSlider.maxLeft,\r\n        this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\r\n      )\r\n    );\r\n\r\n    let top = Math.max(\r\n      0,\r\n      Math.min(\r\n        this.currentSlider.maxTop,\r\n        this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\r\n      )\r\n    );\r\n\r\n    this.onMove(top, left);\r\n  }\r\n\r\n  /**\r\n   * Function triggered when releasing the click in one of the color adjustment bars.\r\n   *\r\n   * @private\r\n   * @param {Event} e\r\n   */\r\n  released(e) {\r\n    this.colorpicker.lastEvent.alias = 'released';\r\n    this.colorpicker.lastEvent.e = e;\r\n\r\n    // e.stopPropagation();\r\n    // e.preventDefault();\r\n\r\n    $(this.colorpicker.picker).off({\r\n      'mousemove.colorpicker': this.moved,\r\n      'touchmove.colorpicker': this.moved,\r\n      'mouseup.colorpicker': this.released,\r\n      'touchend.colorpicker': this.released\r\n    });\r\n  }\r\n}\r\n\r\nexport default SliderHandler;\r\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\nimport _defaults from './options';\r\n\r\n/**\r\n * Handles everything related to the UI of the colorpicker popup: show, hide, position,...\r\n * @ignore\r\n */\r\nclass PopupHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   * @param {Window} root\r\n   */\r\n  constructor(colorpicker, root) {\r\n    /**\r\n     * @type {Window}\r\n     */\r\n    this.root = root;\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * @type {jQuery}\r\n     */\r\n    this.popoverTarget = null;\r\n    /**\r\n     * @type {jQuery}\r\n     */\r\n    this.popoverTip = null;\r\n\r\n    /**\r\n     * If true, the latest click was inside the popover\r\n     * @type {boolean}\r\n     */\r\n    this.clicking = false;\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.hidding = false;\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.showing = false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {jQuery|false}\r\n   */\r\n  get input() {\r\n    return this.colorpicker.inputHandler.input;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {boolean}\r\n   */\r\n  get hasInput() {\r\n    return this.colorpicker.inputHandler.hasInput();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {jQuery|false}\r\n   */\r\n  get addon() {\r\n    return this.colorpicker.addonHandler.addon;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {boolean}\r\n   */\r\n  get hasAddon() {\r\n    return this.colorpicker.addonHandler.hasAddon();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {boolean}\r\n   */\r\n  get isPopover() {\r\n    return !this.colorpicker.options.inline && !!this.popoverTip;\r\n  }\r\n\r\n  /**\r\n   * Binds the different colorpicker elements to the focus/mouse/touch events so it reacts in order to show or\r\n   * hide the colorpicker popup accordingly. It also adds the proper classes.\r\n   */\r\n  bind() {\r\n    let cp = this.colorpicker;\r\n\r\n    if (cp.options.inline) {\r\n      cp.picker.addClass('colorpicker-inline colorpicker-visible');\r\n      return; // no need to bind show/hide events for inline elements\r\n    }\r\n\r\n    cp.picker.addClass('colorpicker-popup colorpicker-hidden');\r\n\r\n    // there is no input or addon\r\n    if (!this.hasInput && !this.hasAddon) {\r\n      return;\r\n    }\r\n\r\n    // create Bootstrap 4 popover\r\n    if (cp.options.popover) {\r\n      this.createPopover();\r\n    }\r\n\r\n    // bind addon show/hide events\r\n    if (this.hasAddon) {\r\n      // enable focus on addons\r\n      if (!this.addon.attr('tabindex')) {\r\n        this.addon.attr('tabindex', 0);\r\n      }\r\n\r\n      this.addon.on({\r\n        'mousedown.colorpicker touchstart.colorpicker': $.proxy(this.toggle, this)\r\n      });\r\n\r\n      this.addon.on({\r\n        'focus.colorpicker': $.proxy(this.show, this)\r\n      });\r\n\r\n      this.addon.on({\r\n        'focusout.colorpicker': $.proxy(this.hide, this)\r\n      });\r\n    }\r\n\r\n    // bind input show/hide events\r\n    if (this.hasInput && !this.hasAddon) {\r\n      this.input.on({\r\n        'mousedown.colorpicker touchstart.colorpicker': $.proxy(this.show, this),\r\n        'focus.colorpicker': $.proxy(this.show, this)\r\n      });\r\n\r\n      this.input.on({\r\n        'focusout.colorpicker': $.proxy(this.hide, this)\r\n      });\r\n    }\r\n\r\n    // reposition popup on window resize\r\n    $(this.root).on('resize.colorpicker', $.proxy(this.reposition, this));\r\n  }\r\n\r\n  /**\r\n   * Unbinds any event bound by this handler\r\n   */\r\n  unbind() {\r\n    if (this.hasInput) {\r\n      this.input.off({\r\n        'mousedown.colorpicker touchstart.colorpicker': $.proxy(this.show, this),\r\n        'focus.colorpicker': $.proxy(this.show, this)\r\n      });\r\n      this.input.off({\r\n        'focusout.colorpicker': $.proxy(this.hide, this)\r\n      });\r\n    }\r\n\r\n    if (this.hasAddon) {\r\n      this.addon.off({\r\n        'mousedown.colorpicker touchstart.colorpicker': $.proxy(this.toggle, this)\r\n      });\r\n      this.addon.off({\r\n        'focus.colorpicker': $.proxy(this.show, this)\r\n      });\r\n      this.addon.off({\r\n        'focusout.colorpicker': $.proxy(this.hide, this)\r\n      });\r\n    }\r\n\r\n    if (this.popoverTarget) {\r\n      this.popoverTarget.popover('dispose');\r\n    }\r\n\r\n    $(this.root).off('resize.colorpicker', $.proxy(this.reposition, this));\r\n    $(this.root.document).off('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.hide, this));\r\n    $(this.root.document).off('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.onClickingInside, this));\r\n  }\r\n\r\n  isClickingInside(e) {\r\n    if (!e) {\r\n      return false;\r\n    }\r\n\r\n    return (\r\n      this.isOrIsInside(this.popoverTip, e.currentTarget) ||\r\n      this.isOrIsInside(this.popoverTip, e.target) ||\r\n      this.isOrIsInside(this.colorpicker.picker, e.currentTarget) ||\r\n      this.isOrIsInside(this.colorpicker.picker, e.target)\r\n    );\r\n  }\r\n\r\n  isOrIsInside(container, element) {\r\n    if (!container || !element) {\r\n      return false;\r\n    }\r\n\r\n    element = $(element);\r\n\r\n    return (\r\n      element.is(container) ||\r\n      container.find(element).length > 0\r\n    );\r\n  }\r\n\r\n  onClickingInside(e) {\r\n    this.clicking = this.isClickingInside(e);\r\n  }\r\n\r\n  createPopover() {\r\n    let cp = this.colorpicker;\r\n\r\n    this.popoverTarget = this.hasAddon ? this.addon : this.input;\r\n\r\n    cp.picker.addClass('colorpicker-bs-popover-content');\r\n\r\n    this.popoverTarget.popover(\r\n      $.extend(\r\n        true,\r\n        {},\r\n        _defaults.popover,\r\n        cp.options.popover,\r\n        {trigger: 'manual', content: cp.picker, html: true}\r\n      )\r\n    );\r\n\r\n    this.popoverTip = $(this.popoverTarget.popover('getTipElement').data('bs.popover').tip);\r\n    this.popoverTip.addClass('colorpicker-bs-popover');\r\n\r\n    this.popoverTarget.on('shown.bs.popover', $.proxy(this.fireShow, this));\r\n    this.popoverTarget.on('hidden.bs.popover', $.proxy(this.fireHide, this));\r\n  }\r\n\r\n  /**\r\n   * If the widget is not inside a container or inline, rearranges its position relative to its element offset.\r\n   *\r\n   * @param {Event} [e]\r\n   * @private\r\n   */\r\n  reposition(e) {\r\n    if (this.popoverTarget && this.isVisible()) {\r\n      this.popoverTarget.popover('update');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the colorpicker between visible or hidden\r\n   *\r\n   * @fires Colorpicker#colorpickerShow\r\n   * @fires Colorpicker#colorpickerHide\r\n   * @param {Event} [e]\r\n   */\r\n  toggle(e) {\r\n    if (this.isVisible()) {\r\n      this.hide(e);\r\n    } else {\r\n      this.show(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shows the colorpicker widget if hidden.\r\n   *\r\n   * @fires Colorpicker#colorpickerShow\r\n   * @param {Event} [e]\r\n   */\r\n  show(e) {\r\n    if (this.isVisible() || this.showing || this.hidding) {\r\n      return;\r\n    }\r\n\r\n    this.showing = true;\r\n    this.hidding = false;\r\n    this.clicking = false;\r\n\r\n    let cp = this.colorpicker;\r\n\r\n    cp.lastEvent.alias = 'show';\r\n    cp.lastEvent.e = e;\r\n\r\n    // Prevent showing browser native HTML5 colorpicker\r\n    if (\r\n      (e && (!this.hasInput || this.input.attr('type') === 'color')) &&\r\n      (e && e.preventDefault)\r\n    ) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n\r\n    // If it's a popover, add event to the document to hide the picker when clicking outside of it\r\n    if (this.isPopover) {\r\n      $(this.root).on('resize.colorpicker', $.proxy(this.reposition, this));\r\n    }\r\n\r\n    // add visible class before popover is shown\r\n    cp.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\r\n\r\n    if (this.popoverTarget) {\r\n      this.popoverTarget.popover('show');\r\n    } else {\r\n      this.fireShow();\r\n    }\r\n  }\r\n\r\n  fireShow() {\r\n    this.hidding = false;\r\n    this.showing = false;\r\n\r\n    if (this.isPopover) {\r\n      // Add event to hide on outside click\r\n      $(this.root.document).on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.hide, this));\r\n      $(this.root.document).on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.onClickingInside, this));\r\n    }\r\n\r\n    /**\r\n     * (Colorpicker) When show() is called and the widget can be shown.\r\n     *\r\n     * @event Colorpicker#colorpickerShow\r\n     */\r\n    this.colorpicker.trigger('colorpickerShow');\r\n  }\r\n\r\n  /**\r\n   * Hides the colorpicker widget.\r\n   * Hide is prevented when it is triggered by an event whose target element has been clicked/touched.\r\n   *\r\n   * @fires Colorpicker#colorpickerHide\r\n   * @param {Event} [e]\r\n   */\r\n  hide(e) {\r\n    if (this.isHidden() || this.showing || this.hidding) {\r\n      return;\r\n    }\r\n\r\n    let cp = this.colorpicker, clicking = (this.clicking || this.isClickingInside(e));\r\n\r\n    this.hidding = true;\r\n    this.showing = false;\r\n    this.clicking = false;\r\n\r\n    cp.lastEvent.alias = 'hide';\r\n    cp.lastEvent.e = e;\r\n\r\n    // TODO: fix having to click twice outside when losing focus and last 2 clicks where inside the colorpicker\r\n\r\n    // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\r\n    if (clicking) {\r\n      this.hidding = false;\r\n      return;\r\n    }\r\n\r\n    if (this.popoverTarget) {\r\n      this.popoverTarget.popover('hide');\r\n    } else {\r\n      this.fireHide();\r\n    }\r\n  }\r\n\r\n  fireHide() {\r\n    this.hidding = false;\r\n    this.showing = false;\r\n\r\n    let cp = this.colorpicker;\r\n\r\n    // add hidden class after popover is hidden\r\n    cp.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\r\n\r\n    // Unbind window and document events, since there is no need to keep them while the popup is hidden\r\n    $(this.root).off('resize.colorpicker', $.proxy(this.reposition, this));\r\n    $(this.root.document).off('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.hide, this));\r\n    $(this.root.document).off('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.onClickingInside, this));\r\n\r\n    /**\r\n     * (Colorpicker) When hide() is called and the widget can be hidden.\r\n     *\r\n     * @event Colorpicker#colorpickerHide\r\n     */\r\n    cp.trigger('colorpickerHide');\r\n  }\r\n\r\n  focus() {\r\n    if (this.hasAddon) {\r\n      return this.addon.focus();\r\n    }\r\n    if (this.hasInput) {\r\n      return this.input.focus();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the colorpicker element has the colorpicker-visible class and not the colorpicker-hidden one.\r\n   * False otherwise.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isVisible() {\r\n    return this.colorpicker.picker.hasClass('colorpicker-visible') &&\r\n      !this.colorpicker.picker.hasClass('colorpicker-hidden');\r\n  }\r\n\r\n  /**\r\n   * Returns true if the colorpicker element has the colorpicker-hidden class and not the colorpicker-visible one.\r\n   * False otherwise.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  isHidden() {\r\n    return this.colorpicker.picker.hasClass('colorpicker-hidden') &&\r\n      !this.colorpicker.picker.hasClass('colorpicker-visible');\r\n  }\r\n}\r\n\r\nexport default PopupHandler;\r\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\nimport ColorItem from './ColorItem';\r\n\r\n/**\r\n * Handles everything related to the colorpicker input\r\n * @ignore\r\n */\r\nclass InputHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   */\r\n  constructor(colorpicker) {\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * @type {jQuery|false}\r\n     */\r\n    this.input = this.colorpicker.element.is('input') ?\r\n      this.colorpicker.element :\r\n      this.colorpicker.options.input ? this.colorpicker.element.find(this.colorpicker.options.input) : false;\r\n\r\n    if (this.input && this.input.length === 0) {\r\n      this.input = false;\r\n    }\r\n\r\n    this._initValue();\r\n  }\r\n\r\n  bind() {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n    this.input.on({\r\n      'keyup.colorpicker': $.proxy(this.onkeyup, this)\r\n    });\r\n    this.input.on({\r\n      'change.colorpicker': $.proxy(this.onchange, this)\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n    this.input.off('.colorpicker');\r\n  }\r\n\r\n  _initValue() {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n\r\n    let val = '';\r\n\r\n    [\r\n      // candidates:\r\n      this.input.val(),\r\n      this.input.data('color'),\r\n      this.input.attr('data-color')\r\n    ].map((item) => {\r\n      if (item && val === '') {\r\n        val = item;\r\n      }\r\n    });\r\n\r\n    if (val instanceof ColorItem) {\r\n      val = this.getFormattedColor(val.string(this.colorpicker.format));\r\n    } else if (!(typeof val === 'string' || val instanceof String)) {\r\n      val = '';\r\n    }\r\n\r\n    this.input.prop('value', val);\r\n  }\r\n\r\n  /**\r\n   * Returns the color string from the input value.\r\n   * If there is no input the return value is false.\r\n   *\r\n   * @returns {String|boolean}\r\n   */\r\n  getValue() {\r\n    if (!this.hasInput()) {\r\n      return false;\r\n    }\r\n\r\n    return this.input.val();\r\n  }\r\n\r\n  /**\r\n   * If the input element is present, it updates the value with the current color object color string.\r\n   * If the value is changed, this method fires a \"change\" event on the input element.\r\n   *\r\n   * @param {String} val\r\n   *\r\n   * @fires Colorpicker#change\r\n   */\r\n  setValue(val) {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n\r\n    let inputVal = this.input.prop('value');\r\n\r\n    val = val ? val : '';\r\n\r\n    if (val === (inputVal ? inputVal : '')) {\r\n      // No need to set value or trigger any event if nothing changed\r\n      return;\r\n    }\r\n\r\n    this.input.prop('value', val);\r\n\r\n    /**\r\n     * (Input) Triggered on the input element when a new color is selected.\r\n     *\r\n     * @event Colorpicker#change\r\n     */\r\n    this.input.trigger({\r\n      type: 'change',\r\n      colorpicker: this.colorpicker,\r\n      color: this.colorpicker.color,\r\n      value: val\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the formatted color string, with the formatting options applied\r\n   * (e.g. useHashPrefix)\r\n   *\r\n   * @param {String|null} val\r\n   *\r\n   * @returns {String}\r\n   */\r\n  getFormattedColor(val = null) {\r\n    val = val ? val : this.colorpicker.colorHandler.getColorString();\r\n\r\n    if (!val) {\r\n      return '';\r\n    }\r\n\r\n    val = this.colorpicker.colorHandler.resolveColorDelegate(val, false);\r\n\r\n    if (this.colorpicker.options.useHashPrefix === false) {\r\n      val = val.replace(/^#/g, '');\r\n    }\r\n\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the widget has an associated input element, false otherwise\r\n   * @returns {boolean}\r\n   */\r\n  hasInput() {\r\n    return this.input !== false;\r\n  }\r\n\r\n  /**\r\n   * Returns true if the input exists and is disabled\r\n   * @returns {boolean}\r\n   */\r\n  isEnabled() {\r\n    return this.hasInput() && !this.isDisabled();\r\n  }\r\n\r\n  /**\r\n   * Returns true if the input exists and is disabled\r\n   * @returns {boolean}\r\n   */\r\n  isDisabled() {\r\n    return this.hasInput() && this.input.prop('disabled') === true;\r\n  }\r\n\r\n  /**\r\n   * Disables the input if any\r\n   *\r\n   * @fires Colorpicker#colorpickerDisable\r\n   * @returns {boolean}\r\n   */\r\n  disable() {\r\n    if (this.hasInput()) {\r\n      this.input.prop('disabled', true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enables the input if any\r\n   *\r\n   * @fires Colorpicker#colorpickerEnable\r\n   * @returns {boolean}\r\n   */\r\n  enable() {\r\n    if (this.hasInput()) {\r\n      this.input.prop('disabled', false);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calls setValue with the current internal color value\r\n   *\r\n   * @fires Colorpicker#change\r\n   */\r\n  update() {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n\r\n    // even hackier than last solution - dont update for inputs less than 6 digits\r\n    console.log('debug', this.getValue(), this.getValue().length);\r\n\r\n    if (this.getValue().length < 6) {\r\n      return;\r\n    }\r\n\r\n    if (this.colorpicker.options.autoInputFallback === false && this.colorpicker.colorHandler.isInvalidColor()) {\r\n      // prevent update if color is invalid, autoInputFallback is disabled and the last event is keyup.\r\n      return;\r\n    }\r\n\r\n    this.setValue(this.getFormattedColor());\r\n  }\r\n\r\n  // need additional function if update is from picker\r\n  updateFromPicker() {\r\n    if (!this.hasInput()) {\r\n      return;\r\n    }\r\n\r\n    this.setValue(this.getFormattedColor());\r\n  }\r\n\r\n  /**\r\n   * Function triggered when the input has changed, so the colorpicker gets updated.\r\n   *\r\n   * @private\r\n   * @param {Event} e\r\n   * @returns {boolean}\r\n   */\r\n  onchange(e) {\r\n    this.colorpicker.lastEvent.alias = 'input.change';\r\n    this.colorpicker.lastEvent.e = e;\r\n\r\n    let val = this.getValue();\r\n\r\n    if (val !== e.value) {\r\n      this.colorpicker.setValue(val);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function triggered after a keyboard key has been released.\r\n   *\r\n   * @private\r\n   * @param {Event} e\r\n   * @returns {boolean}\r\n   */\r\n  onkeyup(e) {\r\n    this.colorpicker.lastEvent.alias = 'input.keyup';\r\n    this.colorpicker.lastEvent.e = e;\r\n\r\n    let val = this.getValue();\r\n\r\n    if (val !== e.value) {\r\n      this.colorpicker.setValue(val);\r\n    }\r\n  }\r\n}\r\n\r\nexport default InputHandler;\r\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj) {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && obj.splice instanceof Function);\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\nimport ColorItem from './ColorItem';\r\n\r\n/**\r\n * Handles everything related to the colorpicker color\r\n * @ignore\r\n */\r\nclass ColorHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   */\r\n  constructor(colorpicker) {\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n  }\r\n\r\n  /**\r\n   * @returns {*|String|ColorItem}\r\n   */\r\n  get fallback() {\r\n    return this.colorpicker.options.fallbackColor ?\r\n      this.colorpicker.options.fallbackColor : (this.hasColor() ? this.color : null);\r\n  }\r\n\r\n  /**\r\n   * @returns {String|null}\r\n   */\r\n  get format() {\r\n    if (this.colorpicker.options.format) {\r\n      return this.colorpicker.options.format;\r\n    }\r\n\r\n    if (this.hasColor() && this.color.hasTransparency() && this.color.format.match(/^hex/)) {\r\n      return this.isAlphaEnabled() ? 'rgba' : 'hex';\r\n    }\r\n\r\n    if (this.hasColor()) {\r\n      return this.color.format;\r\n    }\r\n\r\n    return 'rgb';\r\n  }\r\n\r\n  /**\r\n   * Internal color getter\r\n   *\r\n   * @type {ColorItem|null}\r\n   */\r\n  get color() {\r\n    return this.colorpicker.element.data('color');\r\n  }\r\n\r\n  /**\r\n   * Internal color setter\r\n   *\r\n   * @ignore\r\n   * @param {ColorItem|null} value\r\n   */\r\n  set color(value) {\r\n    this.colorpicker.element.data('color', value);\r\n\r\n    if ((value instanceof ColorItem) && (this.colorpicker.options.format === 'auto')) {\r\n      // If format is 'auto', use the first parsed one from now on\r\n      this.colorpicker.options.format = this.color.format;\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    // if the color option is set\r\n    if (this.colorpicker.options.color) {\r\n      this.color = this.createColor(this.colorpicker.options.color);\r\n      return;\r\n    }\r\n\r\n    // if element[color] is empty and the input has a value\r\n    if (!this.color && !!this.colorpicker.inputHandler.getValue()) {\r\n      this.color = this.createColor(\r\n        this.colorpicker.inputHandler.getValue(), this.colorpicker.options.autoInputFallback\r\n      );\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    this.colorpicker.element.removeData('color');\r\n  }\r\n\r\n  /**\r\n   * Returns the color string from the input value or the 'data-color' attribute of the input or element.\r\n   * If empty, it returns the defaultValue parameter.\r\n   *\r\n   * @returns {String|*}\r\n   */\r\n  getColorString() {\r\n    if (!this.hasColor()) {\r\n      return '';\r\n    }\r\n\r\n    return this.color.string(this.format);\r\n  }\r\n\r\n  /**\r\n   * Sets the color value\r\n   *\r\n   * @param {String|ColorItem} val\r\n   */\r\n  setColorString(val) {\r\n    let color = val ? this.createColor(val) : null;\r\n\r\n    this.color = color ? color : null;\r\n  }\r\n\r\n  /**\r\n   * Creates a new color using the widget instance options (fallbackColor, format).\r\n   *\r\n   * @fires Colorpicker#colorpickerInvalid\r\n   * @param {*} val\r\n   * @param {boolean} fallbackOnInvalid\r\n   * @returns {ColorItem}\r\n   */\r\n  createColor(val, fallbackOnInvalid = true) {\r\n    let color = new ColorItem(this.resolveColorDelegate(val), this.format);\r\n\r\n    if (!color.isValid()) {\r\n      if (fallbackOnInvalid) {\r\n        color = this.getFallbackColor();\r\n      }\r\n\r\n      /**\r\n       * (Colorpicker) Fired when the color is invalid and the fallback color is going to be used.\r\n       *\r\n       * @event Colorpicker#colorpickerInvalid\r\n       */\r\n      this.colorpicker.trigger('colorpickerInvalid', color, val);\r\n    }\r\n\r\n    if (!this.isAlphaEnabled()) {\r\n      // Alpha is disabled\r\n      color.alpha = 1;\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getFallbackColor() {\r\n    if (this.fallback && (this.fallback === this.color)) {\r\n      return this.color;\r\n    }\r\n\r\n    let fallback = this.resolveColorDelegate(this.fallback);\r\n\r\n    let color = new ColorItem(fallback, this.format);\r\n\r\n    if (!color.isValid()) {\r\n      console.warn('The fallback color is invalid. Falling back to the previous color or black if any.');\r\n      return this.color ? this.color : new ColorItem('#000000', this.format);\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  /**\r\n   * @returns {ColorItem}\r\n   */\r\n  assureColor() {\r\n    if (!this.hasColor()) {\r\n      this.color = this.getFallbackColor();\r\n    }\r\n\r\n    return this.color;\r\n  }\r\n\r\n  /**\r\n   * Delegates the color resolution to the colorpicker extensions.\r\n   *\r\n   * @param {String|*} color\r\n   * @param {boolean} realColor if true, the color should resolve into a real (not named) color code\r\n   * @returns {ColorItem|String|*|null}\r\n   */\r\n  resolveColorDelegate(color, realColor = true) {\r\n    let extResolvedColor = false;\r\n\r\n    $.each(this.colorpicker.extensions, function (name, ext) {\r\n      if (extResolvedColor !== false) {\r\n        // skip if resolved\r\n        return;\r\n      }\r\n      extResolvedColor = ext.resolveColor(color, realColor);\r\n    });\r\n\r\n    return extResolvedColor ? extResolvedColor : color;\r\n  }\r\n\r\n  /**\r\n   * Checks if there is a color object, that it is valid and it is not a fallback\r\n   * @returns {boolean}\r\n   */\r\n  isInvalidColor() {\r\n    return !this.hasColor() || !this.color.isValid();\r\n  }\r\n\r\n  /**\r\n   * Returns true if the useAlpha option is exactly true, false otherwise\r\n   * @returns {boolean}\r\n   */\r\n  isAlphaEnabled() {\r\n    return (this.colorpicker.options.useAlpha !== false);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the current color object is an instance of Color, false otherwise.\r\n   * @returns {boolean}\r\n   */\r\n  hasColor() {\r\n    return this.color instanceof ColorItem;\r\n  }\r\n}\r\n\r\nexport default ColorHandler;\r\n","'use strict';\r\n\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Handles everything related to the colorpicker UI\r\n * @ignore\r\n */\r\nclass PickerHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   */\r\n  constructor(colorpicker) {\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * @type {jQuery}\r\n     */\r\n    this.picker = null;\r\n  }\r\n\r\n  get options() {\r\n    return this.colorpicker.options;\r\n  }\r\n\r\n  get color() {\r\n    return this.colorpicker.colorHandler.color;\r\n  }\r\n\r\n  bind() {\r\n    /**\r\n     * @type {jQuery|HTMLElement}\r\n     */\r\n    let picker = this.picker = $(this.options.template);\r\n\r\n    if (this.options.customClass) {\r\n      picker.addClass(this.options.customClass);\r\n    }\r\n\r\n    if (this.options.horizontal) {\r\n      picker.addClass('colorpicker-horizontal');\r\n    }\r\n\r\n    if (this._supportsAlphaBar()) {\r\n      this.options.useAlpha = true;\r\n      picker.addClass('colorpicker-with-alpha');\r\n    } else {\r\n      this.options.useAlpha = false;\r\n    }\r\n  }\r\n\r\n  attach() {\r\n    // Inject the colorpicker element into the DOM\r\n    let pickerParent = this.colorpicker.container ? this.colorpicker.container : null;\r\n\r\n    if (pickerParent) {\r\n      this.picker.appendTo(pickerParent);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    this.picker.remove();\r\n  }\r\n\r\n  _supportsAlphaBar() {\r\n    return (\r\n      (this.options.useAlpha || (this.colorpicker.colorHandler.hasColor() && this.color.hasTransparency())) &&\r\n      (this.options.useAlpha !== false) &&\r\n      (!this.options.format || (this.options.format && !this.options.format.match(/^hex([36])?$/i)))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Changes the color adjustment bars using the current color object information.\r\n   */\r\n  update() {\r\n    if (!this.colorpicker.colorHandler.hasColor()) {\r\n      return;\r\n    }\r\n\r\n    let vertical = (this.options.horizontal !== true),\r\n      slider = vertical ? this.options.sliders : this.options.slidersHorz;\r\n\r\n    let saturationGuide = this.picker.find('.colorpicker-saturation .colorpicker-guide'),\r\n      hueGuide = this.picker.find('.colorpicker-hue .colorpicker-guide'),\r\n      alphaGuide = this.picker.find('.colorpicker-alpha .colorpicker-guide');\r\n\r\n    let hsva = this.color.toHsvaRatio();\r\n\r\n    // Set guides position\r\n    if (hueGuide.length) {\r\n      hueGuide.css(vertical ? 'top' : 'left', (vertical ? slider.hue.maxTop : slider.hue.maxLeft) * (1 - hsva.h));\r\n    }\r\n    if (alphaGuide.length) {\r\n      alphaGuide.css(vertical ? 'top' : 'left', (vertical ? slider.alpha.maxTop : slider.alpha.maxLeft) * (1 - hsva.a));\r\n    }\r\n    if (saturationGuide.length) {\r\n      saturationGuide.css({\r\n        'top': slider.saturation.maxTop - hsva.v * slider.saturation.maxTop,\r\n        'left': hsva.s * slider.saturation.maxLeft\r\n      });\r\n    }\r\n\r\n    // Set saturation hue background\r\n    this.picker.find('.colorpicker-saturation')\r\n      .css('backgroundColor', this.color.getCloneHueOnly().toHexString()); // we only need hue\r\n\r\n    // Set alpha color gradient\r\n    let hexColor = this.color.toHexString();\r\n\r\n    let alphaBg = '';\r\n\r\n    if (this.options.horizontal) {\r\n      alphaBg = `linear-gradient(to right, ${hexColor} 0%, transparent 100%)`;\r\n    } else {\r\n      alphaBg = `linear-gradient(to bottom, ${hexColor} 0%, transparent 100%)`;\r\n    }\r\n\r\n    this.picker.find('.colorpicker-alpha-color').css('background', alphaBg);\r\n  }\r\n}\r\n\r\nexport default PickerHandler;\r\n","'use strict';\r\n\r\n/**\r\n * Handles everything related to the colorpicker addon\r\n * @ignore\r\n */\r\nclass AddonHandler {\r\n  /**\r\n   * @param {Colorpicker} colorpicker\r\n   */\r\n  constructor(colorpicker) {\r\n    /**\r\n     * @type {Colorpicker}\r\n     */\r\n    this.colorpicker = colorpicker;\r\n    /**\r\n     * @type {jQuery}\r\n     */\r\n    this.addon = null;\r\n  }\r\n\r\n  hasAddon() {\r\n    return !!this.addon;\r\n  }\r\n\r\n  bind() {\r\n    /**\r\n     * @type {*|jQuery}\r\n     */\r\n    this.addon = this.colorpicker.options.addon ?\r\n      this.colorpicker.element.find(this.colorpicker.options.addon) : null;\r\n\r\n    if (this.addon && (this.addon.length === 0)) {\r\n      // not found\r\n      this.addon = null;\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    if (this.hasAddon()) {\r\n      this.addon.off('.colorpicker');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If the addon element is present, its background color is updated\r\n   */\r\n  update() {\r\n    if (!this.colorpicker.colorHandler.hasColor() || !this.hasAddon()) {\r\n      return;\r\n    }\r\n\r\n    let colorStr = this.colorpicker.colorHandler.getColorString();\r\n\r\n    let styles = {'background': colorStr};\r\n\r\n    let icn = this.addon.find('i').eq(0);\r\n\r\n    if (icn.length > 0) {\r\n      icn.css(styles);\r\n    } else {\r\n      this.addon.css(styles);\r\n    }\r\n  }\r\n}\r\n\r\nexport default AddonHandler;\r\n"],"sourceRoot":""}